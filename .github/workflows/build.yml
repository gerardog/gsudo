sname: Build Release

on:
  push:
    branches:
      - Feature.NetCore
      - master

jobs:
  test:
    name: Test
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '7.0.x'
        include-prerelease: true 
    - name: Install dependencies
      run: choco install pester --confirm --no-progress
      
    - name: Run Tests
      run: ./build/02-test.ps1

    - name: Test Report DotNet
      uses: dorny/test-reporter@v1
      if: success() || failure()    # run this step even if previous step failed
      with:
        name: DotNET Tests
        path: "**/TestResults*.trx"                            
        reporter: dotnet-trx
        fail-on-error: false
    - name: Test Report PowerShell v5
      uses: zyborg/pester-tests-report@v1 # https://github.com/zyborg/pester-tests-report#inputs
      if: success() || failure()    # run this step even if previous step failed
      with:
        test_results_path: ./testResults_PS5.xml
        report_name: powershell_tests_v5
        report_title: PowerShell v5 Tests
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Test Report PowerShell v7
      uses: zyborg/pester-tests-report@v1 # https://github.com/zyborg/pester-tests-report#inputs
      if: success() || failure()    # run this step even if previous step failed
      with:
        test_results_path: ./testResults_PS7.xml
        report_name: powershell_tests_v7
        report_title: PowerShell v7 Tests
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - uses: OrbitalOwen/desktop-screenshot-action@0.1
      if: always()
      with:
        file-name: 'desktop.jpg'      
          
  build:
    name: Build
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with: 
        fetch-depth: 0
    - uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '7.0.x'
        include-prerelease: true 
    - name: Install dependencies
      run: choco install GitVersion.Portable pester ilmerge --confirm --no-progress
    - name: Update project version
      run: gitversion /l console /output buildserver /updateAssemblyInfo /verbosity minimal
    - name: Build
      run: ./build/01-build.ps1
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Binaries
        path: ./artifacts

  release:
    name: Sign & Release to GitHub
    #wixtoolset
    if: github.repository == 'gerardog/gsudo'
    runs-on: windows-latest
    needs: build
    environment:
      name: release-github
    env:
      cert_path: "C:\\secret\\cert.pfx"
      
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: Binaries
        
    - name: Decode cert
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.p_f_x }}")
        mkdir (split-path -parent $env:cert_path) -ErrorAction Ignore
        [IO.File]::WriteAllBytes("$env:cert_path", $pfx_cert_byte)
        
    - name: Code Sign
      run: ./build/03-sign.ps1
      env:
        cert_key: ${{ secrets.P_F_X_Key }}
        
    - name: Remove the pfx
      run: Remove-Item -path $env:cert_path
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Binaries
        path: ./artifacts